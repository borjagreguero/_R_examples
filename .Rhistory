text(xc-0.2,yc-0.1,'C',col="red")
xc-xa
par(mfrow = c(1,1))
contour2D(u,(x0),(y0),levels = seq(1, 3, by = 0.2),
colkey = TRUE, clab = "Utilidad",
ylim=c(.5,4), xlim=c(1,3.0))
#filled.contour(y0,x0,u,levels = seq(3, 5, by = 0.2),
#               ylim=c(.5,4), xlim=c(0.5,9))
y1 = (25-5*x0)/7
lines(x0,y1,lty=2,lwd=2,xlim=c(.5,2.0))
y2 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
xa=25/15
ya=50/21
log(xa)+2*log(ya)
points(xa,ya,pch=12)
text(xa+0.15,ya+0.1,'A')
xc = 25/18
yc = 12*xb/7
points(xc,yc,pch=12,col="red")
y3 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
text(xc-0.2,yc-0.1,'C',col="red")
xc-xa
log(xb)+2*log(yb)
ua = log(xa)+2*log(ya)
ua
ua - 2*log(12/7)
(ua - 2*log(12/7))/3
exp(t1)
t1 = (ua - 2*log(12/7))/3
exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
log(xb)+2*log(yb)
t1 = (ua - 2*log(12/7))/3
xb = exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
log(xb)+2*log(yb)
ES = xb-xa
ES
ER = ET - ES
ET = xc-xa
ER = ET - ES
ER
ET
ES
rentaB = 6*xb + 7*yb
yb = (rentaB-6*x0)/7
t1 = (ua - 2*log(12/7))/3
xb = exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
ES = xb-xa
ES
ER = ET - ES
rentaB = 6*xb + 7*yb
yr = (rentaB-6*x0)/7
lines(x0,yr,lty=2,lwd=2,col="red")
text(xb-0.2,yb-0.1,'C',col="red")
lines(x0,yr,lty=2,lwd=2,col="blue")
text(xb-0.2,yb-0.1,'C',col="blue")
points(xb,yb,'C',col="blue")
points(xb,yb,pch=12,col="blue")
text(xb-0.2,yb+0.1,'B',col="blue")
text(xb,yb+0.2,'B',col="blue")
par(mfrow = c(1,1))
contour2D(u,(x0),(y0),levels = seq(1, 3, by = 0.2),
colkey = TRUE, clab = "Utilidad",
ylim=c(.5,4), xlim=c(1,3.0))
#filled.contour(y0,x0,u,levels = seq(3, 5, by = 0.2),
#               ylim=c(.5,4), xlim=c(0.5,9))
y1 = (25-5*x0)/7
lines(x0,y1,lty=2,lwd=2,xlim=c(.5,2.0))
y2 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
xa=25/15
ya=50/21
ua = log(xa)+2*log(ya)
points(xa,ya,pch=12)
text(xa+0.15,ya+0.1,'A')
xc = 25/18
yc = 12*xb/7
points(xc,yc,pch=12,col="red")
y3 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
text(xc-0.2,yc-0.1,'C',col="red")
ET = xc-xa
xb = 1.476
yb = 2.53
t1 = (ua - 2*log(12/7))/3
xb = exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
ES = xb-xa
ES
ER = ET - ES
rentaB = 6*xb + 7*yb
yr = (rentaB-6*x0)/7
lines(x0,yr,lty=2,lwd=2,col="blue")
points(xb,yb,pch=12,col="blue")
text(xb,yb+0.2,'B',col="blue")
points(xc,yc,pch=12,col="red")
par(mfrow = c(1,1))
contour2D(u,(x0),(y0),levels = seq(1, 3, by = 0.2),
colkey = TRUE, clab = "Utilidad",
ylim=c(.5,4), xlim=c(1,3.0))
#filled.contour(y0,x0,u,levels = seq(3, 5, by = 0.2),
#               ylim=c(.5,4), xlim=c(0.5,9))
y1 = (25-5*x0)/7
lines(x0,y1,lty=2,lwd=2,xlim=c(.5,2.0))
y2 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
xa=25/15
ya=50/21
ua = log(xa)+2*log(ya)
points(xa,ya,pch=12)
text(xa+0.15,ya+0.1,'A')
xc = 25/18
yc = 12*xc/7
points(xc,yc,pch=12,col="red")
y3 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
text(xc-0.2,yc-0.1,'C',col="red")
ET = xc-xa
t1 = (ua - 2*log(12/7))/3
xb = exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
ES = xb-xa
ES
ER = ET - ES
rentaB = 6*xb + 7*yb
yr = (rentaB-6*x0)/7
lines(x0,yr,lty=2,lwd=2,col="blue")
points(xb,yb,pch=12,col="blue")
text(xb,yb+0.2,'B',col="blue")
par(mfrow = c(1,1))
contour2D(u,(x0),(y0),levels = seq(1, 3, by = 0.2),
colkey = TRUE, clab = "Utilidad",
ylim=c(.5,4), xlim=c(1,2.0))
#filled.contour(y0,x0,u,levels = seq(3, 5, by = 0.2),
#               ylim=c(.5,4), xlim=c(0.5,9))
y1 = (25-5*x0)/7
lines(x0,y1,lty=2,lwd=2,xlim=c(.5,2.0))
y2 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
xa=25/15
ya=50/21
ua = log(xa)+2*log(ya)
points(xa,ya,pch=12)
text(xa+0.15,ya+0.1,'A')
xc = 25/18
yc = 12*xc/7
points(xc,yc,pch=12,col="red")
y3 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
text(xc-0.2,yc-0.1,'C',col="red")
ET = xc-xa
t1 = (ua - 2*log(12/7))/3
xb = exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
ES = xb-xa
ES
ER = ET - ES
rentaB = 6*xb + 7*yb
yr = (rentaB-6*x0)/7
lines(x0,yr,lty=2,lwd=2,col="blue")
points(xb,yb,pch=12,col="blue")
text(xb,yb+0.2,'B',col="blue")
par(mfrow = c(1,1))
contour2D(u,(x0),(y0),levels = seq(1.5,2.5, by = 0.2),
colkey = TRUE, clab = "Utilidad",
ylim=c(.5,4), xlim=c(1,2.0))
#filled.contour(y0,x0,u,levels = seq(3, 5, by = 0.2),
#               ylim=c(.5,4), xlim=c(0.5,9))
y1 = (25-5*x0)/7
lines(x0,y1,lty=2,lwd=2,xlim=c(.5,2.0))
y2 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
xa=25/15
ya=50/21
ua = log(xa)+2*log(ya)
points(xa,ya,pch=12)
text(xa+0.15,ya+0.1,'A')
xc = 25/18
yc = 12*xc/7
points(xc,yc,pch=12,col="red")
y3 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
text(xc-0.2,yc-0.1,'C',col="red")
ET = xc-xa
t1 = (ua - 2*log(12/7))/3
xb = exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
ES = xb-xa
ES
ER = ET - ES
rentaB = 6*xb + 7*yb
yr = (rentaB-6*x0)/7
lines(x0,yr,lty=2,lwd=2,col="blue")
points(xb,yb,pch=12,col="blue")
text(xb,yb+0.2,'B',col="blue")
par(mfrow = c(1,1))
contour2D(u,(x0),(y0),levels = seq(1, 3, by = 0.2),
colkey = TRUE, clab = "Utilidad",
ylim=c(1.5,3.2), xlim=c(1,2.2))
#filled.contour(y0,x0,u,levels = seq(3, 5, by = 0.2),
#               ylim=c(.5,4), xlim=c(0.5,9))
y1 = (25-5*x0)/7
lines(x0,y1,lty=2,lwd=2,xlim=c(.5,2.0))
y2 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
xa=25/15
ya=50/21
ua = log(xa)+2*log(ya)
points(xa,ya,pch=12)
text(xa+0.15,ya+0.1,'A')
xc = 25/18
yc = 12*xc/7
points(xc,yc,pch=12,col="red")
y3 = (25-6*x0)/7
lines(x0,y2,lty=2,lwd=2,col="red")
text(xc-0.2,yc-0.1,'C',col="red")
ET = xc-xa
t1 = (ua - 2*log(12/7))/3
xb = exp(t1)
yb = 12*xb/7
yb
log(xb)+2*log(yb)
ua
ES = xb-xa
ES
ER = ET - ES
rentaB = 6*xb + 7*yb
yr = (rentaB-6*x0)/7
lines(x0,yr,lty=2,lwd=2,col="blue")
points(xb,yb,pch=12,col="blue")
text(xb,yb+0.2,'B',col="blue")
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
q = seq(0,80,0.1)
P = 6-q
IMg = 60-2*q
CMg1 = 3*q + 10
CMg2 = 2*q + 12
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
CMg1
CMg1
q = seq(0,60,0.1)
P = 6-q
IMg = 60-2*q
CMg1 = 3*q + 10
CMg2 = 2*q + 12
par(mfrow = c(1,1))
plot(q,P,type = "line")
P = 60-q
IMg = 60-2*q
CMg1 = 3*q + 10
CMg2 = 2*q + 12
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 50,y = 300,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = T, lty = c(1,1,1),col = c("black","green","red","blue"),box.lty=0)
legend(x = 50,y = 300,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = T, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
legend(x = 40,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = T, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
legend(x = 40,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(9.45,50.55)
text(9.45,50.55,'Eq Cartel')
text(9.45+5,50.55+2,'Eq Cartel')
points(9.45,50.55,type = 3)
par(mfrow = c(1,1))
plot(q,P,type = "line")
points(9.45,50.55,type = 3)
points(9.45,50.55,type = 2)
points(9.45,50.55,type = 1)
points(9.45,50.55,size(3))
?points
points(9.45,50.55,type=0)
points(9.45,50.55,pch=0)
?points
points(9.45,50.55,pch=0,cex = .6)
points(9.45,50.55,pch=0,cex = 3)
points(9.45,50.55,pch=0,cex = 2)
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(9.45,50.55,pch=0,cex = 2)
points(9.45,50.55,pch=0,cex = 0.7)
text(9.45+5,50.55+2,'Eq Cartel')
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(9.45,50.55,pch=0,cex = 2)
points(9.45,50.55,pch=0,cex = 0.7)
text(9.45+2,50.55+2,'Eq Cartel')
points(9.45,50.55,pch=2,cex = 2)
points(9.45,50.55,pch=0,cex = 0.7)
text(9.45+2,50.55+2,'Eq Cartel')
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(9.45,50.55,pch=2,cex = 2)
points(9.45,50.55,pch=0,cex = 0.7)
text(9.45+2,50.55+2,'Eq Cartel')
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(9.45,50.55,pch=0,cex = 1.5)
points(9.45,50.55,pch=0,cex = 0.7)
text(9.45+2,50.55+2,'Eq Cartel')
Q1 = 4.18
Q2
Q1
Q1
Q2 = 1.5*Q1 - 1
Q = Q1+Q2
Q1 + 2*Q +22
60-2*Q
46/11
Q2 = 1.5*Q1 - 1
Q = Q1+Q2
Q1 + 2*Q +22
60-2*Q
Q
Q1 = 46/11 # 4.18
Q2 = (3*Q1 - 2)/2
Q = Q1+Q2
Q2
Q1
5*Q1 + 4*Q
5*Q1 + 4*Q -38
5*Q1 + 4*Q2 -38
3*Q1 - 3*Q2 +2
60-2*Q
38+8
60-22
Q1 = 42/11 # 4.18
Q2 = (3*Q1 - 2)/2
Q = Q1+Q2
Q2
Q1
Q = Q1+Q2
Q
5*Q1 + 4*Q2 -38
3*Q1 - 3*Q2 +2
2*Q1 - 3*Q2 +2
3*Q1 - 2*Q2 +2
3*Q1 - 2*Q2 -2
60-2*Q
60-*Q
60-Q
P=60-Q
text(Q+2,P+2,'Eq Cartel')
points(Q,P,pch=0,cex = 1.5)
points(Q,P,pch=0,cex = 0.7)
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(Q,P,pch=0,cex = 1.5)
points(Q,P,pch=0,cex = 0.7)
text(Q+2,P+2,'Eq Cartel')
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(Q,P,pch=0,cex = 1.5)
points(Q,P,pch=0,cex = 0.7)
text(Q+2,P+2,'Eq Cartel')
par(mfrow = c(1,1))
q = seq(0,60,0.1)
P = 60-q
IMg = 60-2*q
CMg1 = 3*q + 10
CMg2 = 2*q + 12
Q1 = 42/11 # 4.18
Q2 = (3*Q1 - 2)/2
Q = Q1+Q2
5*Q1 + 4*Q2 -38
3*Q1 - 2*Q2 -2
PE=60-Q
par(mfrow = c(1,1))
plot(q,P,type = "line")
lines(q,IMg,lty=1,lwd=2,col="green")
lines(q,CMg1,lty=1,lwd=2,col="red")
lines(q,CMg2,lty=1,lwd=2,col="blue")
legend(x = 35,y = 55,cex = 0.9,legend = c("P","IMg","CMg1","CMg2"),
horiz = F, lty = c(1,1,1,1),col = c("black","green","red","blue"),box.lty=0)
#legend("topright",legend = c("P","IMg","CMg"),lty = c(1,1,1),
#       text.font = 1, col = c("black","red","blue"),box.lty=0)
grid(NULL, NULL, lwd = 1) # grid only in y-direction
points(Q,PE,pch=0,cex = 1.5)
points(Q,PE,pch=0,cex = 0.7)
text(Q+2,PE+2,'Eq Cartel')
B1 = PE*Q1 - (1.5*Q1^2 + 10*Q1 +20 )
B1 = PE*Q1 - (1.5*Q1^2 + 10*Q1 +20 )
B2 = PE*Q2 - (Q2^2 + 12*Q2 +10 )
B1
B2
library(maptools)
library(rgdal)
setwd("~/bgr/MOOC/_R/_R_examples")
library(maptools)
library(rgdal)
cycle<- read.csv("./London_cycle_hire_locs.csv", header=T)
cycle<- read.csv("./data/London_cycle_hire_locs.csv", header=T)
head(cycle)
cycle<- read.csv("./data/London_cycle_hire_locs.csv", header=T)
## Inspect column headings
head(cycle)
plot(cycle$X, cycle$Y)
coordinates(cycle)<- c("X", "Y")
class(cycle)
str(cycle)
EPSG<- make_EPSG()
head(EPSG)
with(EPSG, EPSG[grep("British National", note),])
BNG<- CRS("+init=epsg:27700")
BNG<- CRS("+init=epsg:27700")
proj4string(cycle)<-BNG
BNG
sport<- readShapePoly("./data/london_sport.shp", proj4string= BNG)
sport
names(sport)
sport@proj4string
plot(sport, col="blue")
plot(cycle, add=T, col= "red", pch=15)
writePointsShape(cycle, "./data/cycle.shp")
## and the polygon data (replace Poly with Lines for spatial lines)
writePolyShape(sport, "./data/london_sport.shp")
breaks = quantile(volcano, seq(0, 1, length.out=256))
cols = colorRampPalette(c("#55FFFF", "grey10"))(255)
par(mfrow = c(1, 2))
image(volcano, col=cols, axes=F, asp=T)
title(main = "Linear")
image(volcano, col=cols, breaks=breaks, axes=F, asp=T)
title(main = "Quantile")
